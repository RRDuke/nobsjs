'use strict';

var path = require('path');

var db = require(path.resolve('./lib/db.js'));

exports.createRole = createRole;
exports.getRoleById = getRoleById;
exports.sendRole = sendRole;
exports.getRoles = getRoles;
exports.sendRole = sendRole;
exports.updateRole = updateRole;

//////////

/**
 * Get all roles from the database.
 *
 * @param {ExpressRequestObject} req The request object generated by express.
 * @param {ExpressResponseObject} res The response object generated by express.
 */

function getRoles (req, res) {
  db.Role.findAll()
    .then(sendRoles)
    .catch(send500);

  //////////

  function sendRoles (roles) {
    res.send(roles);
  }

  function send500 () {
    res.status(500).send('A database error occured.');
  }
}

/**
 * Send role.
 *
 * @param {ExpressRequestObject} req The request object generated by express.
 * @param {ExpressResponseObject} res The response object generated by express.
 */

function sendRole (req, res) {
  if (req.role) {
    res.send(req.role);
  } else {
    res.status(400).send('Role does not exist');
  }
}

/**
 * Create a new Role.
 *
 * @param {ExpressRequestObject} req The request object generated by express.
 * @param {ExpressResponseObject} res The response object generated by express.
 */

function createRole (req, res) {
  var role = {};
  role.name = req.body.name;
  db.Role.create(role)
  .then(sendNewRole)
  .catch(send500);

  //////////

  function sendNewRole (role) {
    res.send(role);
  }

  function send500 () {
    res.status(500).send('The Role could not be Created');
  }
}

/**
 * Update a role.
 *
 * @param {ExpressRequestObject} req The request object generated by express.
 * @param {ExpressResponseObject} res The response object generated by express.
 */

function updateRole (req, res) {
  var role = {};
  role.name = req.body.name;
  var roleQuery = {
    where: {
      id: req.role.id
    }
  };

  db.Role.update(role, roleQuery)
  .then(findUpdatedRole)
  .then(sendUpdatedRole)
  .catch(send500);

  //////////

  function findUpdatedRole () {
    return db.Role.findOne({
      where: {
        id: req.role.id
      }
    });
  }

  function sendUpdatedRole (role) {
    res.send(role);
  }

  function send500 () {
    res.status(500).send('The Role could not be updated');
  }
}

function getRoleById (req, res, next, id) {
  db.Role.findOne({ where: { id: id } })
  .then(goToNext)
  .catch(send500);

  //////////

  function goToNext (role) {
    req.role = role;
    next();
  }

  function send500 () {
    res.status(500).send('A Database Error Occured');
  }
}
